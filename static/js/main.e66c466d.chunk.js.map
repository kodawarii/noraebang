{"version":3,"sources":["components/TableRow.js","components/Empty.component.js","components/index.component.js","components/about.component.js","components/home.component.js","App.js","serviceWorker.js","index.js"],"names":["TableRow","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","delete","bind","assertThisInitialized","axios","get","obj","_id","then","console","log","catch","err","window","open","URL","react_default","a","createElement","artist","song_name","onClick","handleClick","className","length","key","max_key","tj_number","ky_number","order","Component","Empty","Index","state","songList","_this2","response","setState","data","error","map","object","i","components_TableRow","message","Empty_component_Empty","style","marginTop","tabRow","About","Home","App","react_router_dom","href","rel","to","react_router","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e66c466d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nclass TableRow extends Component {\r\n\r\n  constructor(props) {\r\n        super(props);\r\n        this.delete = this.delete.bind(this);\r\n  }\r\n\r\n  delete() {\r\n    axios.get('http://localhost:4000/song/delete/'+this.props.obj._id)\r\n      .then(console.log('Deleted'))\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  handleClick() {\r\n    //window.location.assign(this.props.obj.URL, '_blank');\r\n    window.open(this.props.obj.URL, '_blank');\r\n  } \r\n\r\n  render() {\r\n    return (\r\n        <tr>\r\n          <td>\r\n            {this.props.obj.artist}\r\n          </td>\r\n          <td>\r\n            {this.props.obj.song_name}\r\n          </td>\r\n          <td>\r\n            <a onClick={this.handleClick.bind(this)} className=\"youtubeLink\">Youtube</a>\r\n          </td>\r\n          <td>\r\n            {this.props.obj.length}\r\n          </td>\r\n          <td>\r\n            {this.props.obj.key}\r\n          </td>\r\n          <td>\r\n            {this.props.obj.max_key}\r\n          </td>\r\n          <td>\r\n            {this.props.obj.tj_number}\r\n          </td>\r\n          <td>\r\n            {this.props.obj.ky_number}\r\n          </td>\r\n          <td>\r\n            {this.props.obj.order}\r\n          </td>\r\n        </tr>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableRow;","import React, { Component } from 'react';\r\n\r\nimport './style-home.css';\r\n\r\nexport default class Empty extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"home\">\r\n       Database Failed to connect\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport TableRow from './TableRow';\r\nimport Empty from './Empty.component';\r\n\r\nimport './style-index.css';\r\n\r\n/**\r\n * @NOTE Current GET method is set to LOCAL Backend server\r\n *\r\n * @TODO Mobile: Have Title and Artist only, click on to expand and show more details\r\n */\r\n\r\nexport default class Index extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {songList: []};\r\n  }\r\n\r\n  componentDidMount(){\r\n    axios.get('http://localhost:4000/song')\r\n    .then(response => {\r\n      this.setState({ songList: response.data });\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  tabRow(){\r\n    return this.state.songList.map(function(object, i){\r\n        return <TableRow obj={object} key={i} />;\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let message = '';\r\n\r\n    if(this.state.songList.length == 0){\r\n      message =  <Empty/>\r\n    }\r\n\r\n    return (\r\n      <div className=\"tableContainer\">\r\n        <h2> 노래방 데이터</h2>\r\n          <table className=\"mytable\" style={{ marginTop: 20 }}>\r\n            <thead>\r\n              <tr>\r\n                <th>가수</th>\r\n                <th>재목</th>\r\n                <th>URL</th>\r\n                <th>길이</th>\r\n                <th>키</th>\r\n                <th>최고음</th>\r\n                <th>TJ번호</th>\r\n                <th>KY번호</th>\r\n                <th>순</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              { this.tabRow() }\r\n            </tbody>\r\n          </table>\r\n          {message}\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\n\r\nimport './style-about.css';\r\n\r\nexport default class About extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"about\">\r\n        <h1>What is this?</h1>\r\n        <div className=\"aboutTextBody\">\r\n          <h3> \r\n            An easy to access, easy to read collection of data for all the music I like to destroy my throat with at the K\r\n          </h3>\r\n          <h3>\r\n            To put it simple, its a MERN CRUD application - a MongoDB Database, a Express/Node Backend Server and a React Front End\r\n          </h3>\r\n          <h3>\r\n            \r\n          </h3>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\n\r\nimport './style-home.css';\r\n\r\nexport default class Home extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"home\">\r\n       <h1> Welcome to 형님 노래방 </h1>\r\n       <div className=\"homeTextBody\">\r\n        <h3> A Full Stack Web Page created from scratch using \r\n          <span className=\"mongo\"> MongoDB</span> \r\n          <span className=\"express\"> Express</span> \r\n          <span className=\"react\"> React</span> \r\n          <span className=\"node\"> Node</span> </h3>\r\n        <h3> Created to make my life so much easier when searching for my favourite songs at TJ and KY </h3>\r\n       </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\nimport './App.css';\n\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\n\nimport Index from './components/index.component'; \nimport About from './components/about.component'; \nimport Home from './components/home.component'; \n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <header className=\"App-header\">\n        <link href=\"https://fonts.googleapis.com/css?family=Gaegu&display=swap\" rel=\"stylesheet\" />\n        <link href=\"https://fonts.googleapis.com/css?family=Gamja+Flower&display=swap\" rel=\"stylesheet\" />\n        <div className=\"brand\">\n          <h1 className=\"brandText\">형님 노래방</h1>\n        </div>\n        <nav className=\"navbar\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to={'/'} className=\"nav-link\">Home</Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to={'/index'} className=\"nav-link\">Data</Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to={'/about'} className=\"nav-link\">About</Link>\n            </li>\n          </ul>\n        </nav>\n         \n        <div className=\"switch-div\">\n          <Switch>\n            <Route exact path='/' component={ Home } />\n            <Route exact path='/index' component={ Index } />\n            <Route path='/about' component={ About } />\n          </Switch>\n        </div>\n        </header>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <div>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n        <footer> Created by Eunbal/Talmo Developments 2019 &#169; </footer>\n    </div>, \n    \n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}